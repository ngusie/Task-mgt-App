{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\NgusieNest\\\\React.js-Management-System\\\\src\\\\components\\\\main\\\\TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTaskContext } from '../../context/TaskContext';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const {\n    addTask\n  } = useTaskContext(); // Access addTask function from TaskContext\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!description || !status) {\n      toast.error('Please choose a task description & status.');\n      return;\n    }\n    const newTask = {\n      id: Date.now(),\n      description,\n      status\n    };\n    addTask(newTask);\n    setDescription('');\n    setStatus('');\n    toast.success('Task added successfully');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"task-form justify-content-center row mb-2\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Add Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Task description\",\n      className: \"task-input col-lg-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: status,\n      onChange: e => setStatus(e.target.value),\n      className: \"task-select col-lg-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Not Started\",\n        children: \"Not Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"In Progress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Finished\",\n        children: \"Finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"task-button col-lg-3\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"NAAlCBkJfHF7BQGpy06G/qit3PY=\", false, function () {\n  return [useTaskContext];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useTaskContext","toast","jsxDEV","_jsxDEV","TaskForm","_s","addTask","description","setDescription","status","setStatus","handleSubmit","e","preventDefault","error","newTask","id","Date","now","success","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/NgusieNest/React.js-Management-System/src/components/main/TaskForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useTaskContext } from '../../context/TaskContext';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst TaskForm = () => {\r\n  const { addTask } = useTaskContext(); // Access addTask function from TaskContext\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!description || !status) {\r\n      toast.error('Please choose a task description & status.');\r\n      return;\r\n    }\r\n    const newTask = {\r\n      id: Date.now(),\r\n      description,\r\n      status\r\n    };\r\n    addTask(newTask);\r\n    setDescription('');\r\n    setStatus('');\r\n    toast.success('Task added successfully');\r\n  };\r\n\r\n  return (\r\n    <form className=\"task-form justify-content-center row mb-2\" onSubmit={handleSubmit}>\r\n      <h2 className='text-center'>Add Tasks</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        placeholder=\"Task description\"\r\n        className=\"task-input col-lg-3\"\r\n      />\r\n      <select\r\n        value={status}\r\n        onChange={(e) => setStatus(e.target.value)}\r\n        className=\"task-select col-lg-3\"\r\n      >\r\n        <option value=\"\">Select status</option>\r\n        <option value=\"Not Started\">Not Started</option>\r\n        <option value=\"In Progress\">In Progress</option>\r\n        <option value=\"Finished\">Finished</option>\r\n      </select>\r\n      <button type=\"submit\" className=\"task-button col-lg-3\">Add Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}